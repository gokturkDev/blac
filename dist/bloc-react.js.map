{"version":3,"file":"bloc-react.js","sources":["../src/lib/constants.ts","../src/lib/createId.ts","../src/lib/StreamAbstraction.ts","../src/lib/BlocBase.ts","../src/lib/Bloc.ts","../src/lib/Cubit.ts","../src/lib/BlocObserver.ts","../src/lib/BlocConsumer.ts","../src/lib/react/BlocReact.tsx"],"sourcesContent":["import { BlocOptions } from \"./types\";\n\nexport const LOCAL_STORAGE_PREFIX = \"data.\";\n\nexport const cubitDefaultOptions: Required<BlocOptions> = {\n  persistKey: \"\",\n  persistData: true,\n};\n","const createId = (): string => {\n  return '_' + Math.random().toString(36).substr(2, 9);\n}\n\nexport default createId;","import { BlocOptions } from \"./types\";\nimport { cubitDefaultOptions, LOCAL_STORAGE_PREFIX } from \"./constants\";\nimport createId from \"./createId\";\n\nexport interface Observer<T> {\n  next: (v: any) => void;\n}\n\ninterface ObserverListItem<T> {\n  observer: Observer<T>;\n  id: string;\n}\n\nexport interface Subscription {\n  unsubscribe: () => void;\n}\n\nexport class BehaviorSubject<T> {\n  public isClosed = false;\n  private prevValue: T | undefined;\n  private value: T\n  private observers: ObserverListItem<T>[] = [];\n\n  constructor(initialValue: T) {\n    this.value = initialValue;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  subscribe(observer: Observer<T>): Subscription {\n    const id = createId();\n    this.observers.push({observer, id});\n    this.triggerObservers();\n    return {\n      unsubscribe: () => this.removeObserver(id)\n    } as Subscription\n  }\n\n  complete() {\n    this.observers = [];\n    this.isClosed = true;\n  }\n\n  next(value: T) {\n    this.value = value;\n    this.triggerObservers()\n  }\n\n  private triggerObservers() {\n    this.observers.forEach(({observer}) => {\n      observer.next(this.value);\n    })\n  }\n\n  private removeObserver(removeId: string) {\n    this.observers = this.observers.filter(({id}) => id !== removeId);\n  }\n}\n\ntype RemoveMethods = () => void;\nexport default class StreamAbstraction<T> {\n  public isClosed = false;\n  public removeListeners: Array<RemoveMethods> = [];\n  protected readonly _options: BlocOptions;\n  private _subject: BehaviorSubject<T>;\n\n  constructor(initialValue: T, blocOptions: BlocOptions = {}) {\n    let value: any = initialValue;\n    const options = { ...cubitDefaultOptions, ...blocOptions };\n    this._options = options;\n\n    if (options.persistKey && options.persistData) {\n      const cachedValue = this.getCachedValue();\n      if (!(cachedValue instanceof Error)) {\n        value = cachedValue;\n      }\n    }\n\n    this._subject = new BehaviorSubject(value);\n  }\n\n  public get state(): T {\n    return this._subject.getValue();\n  }\n\n  readonly removeRemoveListener = (index: number) => {\n    this.removeListeners.splice(index, 1);\n  }\n\n  readonly addRemoveListener = (method: RemoveMethods) => {\n    const index = this.removeListeners.length;\n    this.removeListeners.push(method);\n    return () => this.removeRemoveListener(index);\n  }\n\n  public subscribe = (observer: Observer<T>): Subscription => this._subject.subscribe({\n    next: observer.next,\n  });\n\n  public complete = (): void => {\n    this.isClosed = true;\n    this._subject.complete();\n  }\n\n  public clearCache = (): void => {\n    const key = this._options.persistKey;\n    if (key) {\n      localStorage.removeItem(`${LOCAL_STORAGE_PREFIX}${key}`);\n    }\n  };\n\n  jsonToState(state: string): T {\n    return JSON.parse(state).state;\n  }\n\n  stateToJson(state: T): string {\n    return JSON.stringify({ state });\n  }\n\n  protected next = (value: T): void => {\n    this._subject.next(value);\n    this.updateCache();\n  };\n\n  protected getCachedValue = (): T | Error => {\n    const cachedValue = localStorage.getItem(\n      `${LOCAL_STORAGE_PREFIX}${this._options.persistKey}`\n    );\n    if (cachedValue) {\n      try {\n        return this.jsonToState(cachedValue);\n      } catch (e) {\n        const error = new Error(\n          `Failed to parse JSON in localstorage for the key: \"${LOCAL_STORAGE_PREFIX}${this._options.persistKey}\"`\n        );\n        console.error(error);\n        return error;\n      }\n    }\n    return new Error(\"Key not found\");\n  };\n\n  protected updateCache = (): void => {\n    const { persistData, persistKey } = this._options;\n    if (persistData && persistKey) {\n      localStorage.setItem(\n        `${LOCAL_STORAGE_PREFIX}${persistKey}`,\n        this.stateToJson(this.state)\n      );\n    } else {\n      this.clearCache();\n    }\n  };\n}\n","import { BlocConsumer } from \"./BlocConsumer\";\nimport StreamAbstraction from \"./StreamAbstraction\";\nimport { BlocOptions, ChangeEvent } from \"./types\";\nimport createId from \"./createId\";\n\nexport interface BlocMeta {\n  scope: 'unknown' | 'local' | 'global'\n}\n\ntype ChangeMethod = <T>(change: ChangeEvent<T>, bloc: BlocBase<T>) => void\ntype RegisterMethod = <T>(consumer: BlocConsumer, bloc: BlocBase<T>) => void\ntype ValueChangeMethod = <T>(value: T, bloc: BlocBase<T>) => void;\n\nexport default class BlocBase<T> extends StreamAbstraction<T> {\n  public id = createId();\n  public createdAt = new Date();\n  public meta: BlocMeta = {\n    scope: 'unknown'\n  }\n  public changeListeners: ChangeMethod[] = [];\n  public registerListeners: RegisterMethod[] = [];\n  public valueChangeListeners: ValueChangeMethod[] = [];\n  public consumer: BlocConsumer | null = null;\n\n  constructor(initialValue: T, blocOptions: BlocOptions = {}) {\n    super(initialValue, blocOptions);\n  }\n\n  // listeners\n  readonly removeChangeListener = (index: number) => {\n    this.changeListeners.splice(index, 1);\n  }\n\n  readonly addChangeListener = (method: ChangeMethod) => {\n    const index = this.changeListeners.length;\n    this.changeListeners.push(method);\n    return () => this.removeChangeListener(index);\n  }\n\n  readonly removeValueChangeListener = (index: number) => {\n    this.valueChangeListeners.splice(index, 1);\n  }\n\n  readonly addValueChangeListener = (method: ValueChangeMethod) => {\n    const index = this.valueChangeListeners.length;\n    this.valueChangeListeners.push(method);\n    return () => this.removeValueChangeListener(index);\n  }\n\n  readonly removeRegisterListener = (index: number) => {\n    this.registerListeners.splice(index, 1);\n  }\n\n  readonly addRegisterListener = (method: RegisterMethod) => {\n    const index = this.registerListeners.length;\n    this.registerListeners.push(method);\n    return () => this.removeRegisterListener(index);\n  }\n\n  readonly notifyChange = (state: T): void => {\n    this.consumer?.notifyChange(this, state);\n\n    this.changeListeners.forEach(fn => fn({\n      currentState: this.state,\n      nextState: state,\n    }, this))\n  };\n\n  readonly notifyValueChange = (): void => {\n    this.consumer?.notifyValueChange(this);\n    this.valueChangeListeners.forEach(fn => fn(this.state, this))\n  };\n}\n","import BlocBase from \"./BlocBase\";\nimport { BlocOptions } from \"./types\";\n\nexport default class Bloc<E, T> extends BlocBase<T> {\n  onTransition:\n    | null\n    | ((change: { currentState: T; event: E; nextState: T }) => void) = null;\n  protected mapEventToState: null | ((event: E) => T) = null;\n\n  constructor(initialState: T, options?: BlocOptions) {\n    super(initialState, options);\n  }\n\n  public add = (event: E): void => {\n    if (this.mapEventToState) {\n      const newState = this.mapEventToState(event);\n      this.notifyChange(newState);\n      this.notifyTransition(newState, event);\n      this.next(newState);\n      this.notifyValueChange();\n    } else {\n      console.error(\n        `\"mapEventToState\" not implemented for \"${this.constructor.name}\"`\n      );\n    }\n  };\n\n  protected notifyTransition = (state: T, event: E): void => {\n    this.consumer?.notifyTransition(this, state, event);\n    this.onTransition?.({\n      currentState: this.state,\n      event,\n      nextState: state,\n    })\n  };\n}\n","import BlocBase from \"./BlocBase\";\n\nexport default class Cubit<T> extends BlocBase<T> {\n  public emit = (value: T): void => {\n    this.notifyChange(value);\n    this.next(value);\n    this.notifyValueChange();\n  };\n}\n","import BlocBase from \"./BlocBase\";\nimport { ChangeEvent, TransitionEvent } from \"./types\";\n\nexport interface BlocObserverOptions {\n  /* Called whenever any state changes global or local, Bloc or Cubit. */\n  onChange?: (bloc: BlocBase<any>, event: ChangeEvent<any>) => void;\n  /* Called only when a Bloc changes (global or local). */\n  onTransition?: (bloc: BlocBase<any>, event: TransitionEvent<any, any>) => void;\n}\n\n\nexport default class BlocObserver {\n  onChange: (bloc: BlocBase<any>, event: ChangeEvent<any>) => void\n  onTransition: (bloc: BlocBase<any>, event: TransitionEvent<any, any>) => void\n\n  constructor(methods: BlocObserverOptions = {}) {\n    this.onChange = methods.onChange ? methods.onChange : this.defaultAction;\n    this.onTransition = methods.onTransition ? methods.onTransition : this.defaultAction;\n  }\n\n  // trigger events\n  readonly addChange = (bloc: BlocBase<any>, state: any) => {\n    this.onChange(bloc, this.createChangeEvent(bloc, state));\n  }\n\n  readonly addTransition = (bloc: BlocBase<any>, state: any, event: any) => {\n    this.onTransition(bloc, this.createTransitionEvent(bloc, state, event));\n  }\n  readonly addBlocAdded = (bloc: BlocBase<any>) => {\n    this.onBlocAdded(bloc);\n  }\n  readonly addBlocRemoved = (bloc: BlocBase<any>) => {\n    this.onBlocRemoved(bloc);\n  }\n\n\n  // consume\n  private readonly defaultAction = () => {}\n\n  onBlocAdded: (bloc: BlocBase<any>) => void = this.defaultAction\n  onBlocRemoved: (bloc: BlocBase<any>) => void = this.defaultAction\n\n  private createTransitionEvent(bloc: BlocBase<any>, state: any, event: any): TransitionEvent<any, any> {\n    return {\n      currentState: bloc.state,\n      event,\n      nextState: state,\n    }\n  }\n\n  private createChangeEvent(bloc: BlocBase<any>, state: any): ChangeEvent<any> {\n    return {\n      currentState: bloc.state,\n      nextState: state,\n    }\n  }\n}","import BlocBase from \"./BlocBase\";\nimport { BlocClass, ChangeEvent, ValueType } from \"./types\";\nimport BlocObserver from \"./BlocObserver\";\n\nexport interface ReactBlocOptions {\n  /** Enables debugging which calls BlocReact.observer every time a Subject is updated. Defaults to false */\n  debug?: boolean;\n}\n\nexport type BlocObserverScope = \"local\" | \"global\" | \"all\";\ntype BlocChangeObserverList = [\n  BlocClass<any>,\n  (bloc: any, event: ChangeEvent<any>) => unknown,\n  BlocObserverScope\n];\n\ntype BlocValueChangeObserverList = [\n  BlocClass<any>,\n  (bloc: any) => unknown,\n  BlocObserverScope\n];\n\nexport interface ProviderItem {\n  id: string,\n  parent?: string,\n  bloc: BlocBase<any>,\n}\n\n\nexport interface ConsumerOptions {\n  observer?: BlocObserver;\n  // middleware?: BlocMiddleware[]\n}\n\nexport class BlocConsumer {\n  observer: BlocObserver;\n  public mocksEnabled = false;\n  public providerList: ProviderItem[] = [];\n  private blocListGlobal: BlocBase<any>[];\n  private blocChangeObservers: BlocChangeObserverList[] = [];\n  private blocValueChangeObservers: BlocValueChangeObserverList[] = [];\n  private mockBlocs: BlocBase<any>[] = [];\n\n  constructor(blocs: BlocBase<any>[], options: ConsumerOptions = {}) {\n    this.blocListGlobal = blocs;\n    this.observer = options.observer || new BlocObserver();\n\n    for (const b of blocs) {\n      b.consumer = this;\n      b.registerListeners.forEach(fn => fn(this, b));\n      b.meta.scope = 'global';\n      this.observer.addBlocAdded(b);\n    }\n  }\n\n  notifyChange(bloc: BlocBase<any>, state: any): void {\n    if (bloc.isClosed) {\n      return\n    }\n\n    this.observer.addChange(bloc, state);\n\n    for (const [blocClass, callback, scope] of this.blocChangeObservers) {\n      const isGlobal = this.blocListGlobal.indexOf(bloc) !== -1;\n      const matchesScope =\n        scope === \"all\" ||\n        (isGlobal && scope === \"global\") ||\n        (!isGlobal && scope === \"local\");\n      if (matchesScope && bloc instanceof blocClass) {\n        callback(bloc, {\n          nextState: state,\n          currentState: bloc.state\n        });\n      }\n    }\n  }\n\n  notifyValueChange(bloc: BlocBase<any>): void {\n    if (bloc.isClosed) {\n      return\n    }\n\n    for (const [blocClass, callback, scope] of this.blocValueChangeObservers) {\n      const isGlobal = this.blocListGlobal.indexOf(bloc) !== -1;\n      const matchesScope =\n        scope === \"all\" ||\n        (isGlobal && scope === \"global\") ||\n        (!isGlobal && scope === \"local\");\n      if (matchesScope && bloc instanceof blocClass) {\n        callback(bloc);\n      }\n    }\n  }\n\n  notifyTransition(bloc: BlocBase<any>, state: any, event: any): void {\n    if (bloc.isClosed) {\n      return\n    }\n\n    this.observer.addTransition(bloc, state, event);\n  }\n\n  public addBlocChangeObserver<T extends BlocBase<any>>(\n    blocClass: BlocClass<T>,\n    callback: (bloc: T, event: ChangeEvent<ValueType<T>>) => unknown,\n    scope: BlocObserverScope = \"all\"\n  ) {\n    this.blocChangeObservers.push([blocClass, callback, scope]);\n  }\n\n  public addBlocValueChangeObserver<T extends BlocBase<any>>(\n    blocClass: BlocClass<T>,\n    callback: (bloc: T) => unknown,\n    scope: BlocObserverScope = \"all\"\n  ) {\n    this.blocValueChangeObservers.push([blocClass, callback, scope]);\n  }\n\n  public addLocalBloc(item: ProviderItem) {\n    this.providerList.push(item);\n    item.bloc.consumer = this;\n    item.bloc.registerListeners.forEach(fn => fn(this, item.bloc));\n    item.bloc.meta.scope = 'local';\n    this.observer.addBlocAdded(item.bloc);\n  }\n\n  public removeLocalBloc(id: string, bloc: BlocBase<any>) {\n    const item = this.providerList.find(i => i.id === id && i.bloc === bloc);\n\n    if (item) {\n      item.bloc.complete();\n      item.bloc.removeListeners.forEach(fn => fn());\n      this.observer.addBlocRemoved(item.bloc);\n      this.providerList = this.providerList.filter(i => i !== item);\n    }\n  }\n\n  public addBlocMock(bloc: BlocBase<any>): void {\n    if (this.mocksEnabled) {\n      this.mockBlocs = [bloc, ...this.mockBlocs];\n    }\n  }\n\n  public resetMocks(): void {\n    this.mockBlocs = [];\n  }\n\n  public getGlobalBloc(blocClass: BlocClass<any>): undefined | BlocBase<any> {\n    if (this.mocksEnabled) {\n      const mockedBloc = this.mockBlocs.find((c) => c instanceof blocClass);\n      if (mockedBloc) {\n        return mockedBloc;\n      }\n    }\n\n    return this.blocListGlobal.find(c => c instanceof blocClass);\n  }\n\n  public getLocalBlocForProvider<T>(id: string, blocClass: BlocClass<T>): BlocBase<T> | undefined {\n    for (const providerItem of this.providerList) {\n      if (providerItem.id === id) {\n        if (providerItem.bloc instanceof blocClass) {\n          return providerItem.bloc;\n        }\n\n        let parent = providerItem.parent;\n        while (parent) {\n          const parentItem = this.providerList.find(i => i.id === parent);\n          if (parentItem?.bloc instanceof blocClass) {\n            return parentItem.bloc;\n          }\n\n          parent = parentItem?.parent;\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  protected getGlobalBlocInstance<T>(global: BlocBase<any>[], blocClass: BlocClass<T>): BlocBase<T> | undefined {\n    if (this.mocksEnabled) {\n      const mockedBloc = this.mockBlocs.find((c) => c instanceof blocClass);\n      if (mockedBloc) {\n        return mockedBloc;\n      }\n    }\n\n    return global.find((c) => c instanceof blocClass);\n  }\n}\n","import React, { JSXElementConstructor, ReactElement, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport BlocBase from \"../BlocBase\";\nimport { BlocClass, BlocHookData, ChangeEvent, ValueType } from \"../types\";\nimport { BlocConsumer, ConsumerOptions } from \"../BlocConsumer\";\nimport createId from \"../createId\";\n\ninterface ReactBlocOptions {\n}\n\ninterface BlocHookOptions<T extends BlocBase<any>> {\n  /*\n  Boolean value if the hook should update the returned state value when the BLoC state changes.\n  Set it to false if you only need access to the methods of a Cubit, or the `add` method on a Bloc\n   */\n  subscribe?: boolean;\n  /*\n  Decide weather the returned state value should be updated or not. Will have no effect if `subscribe` is false.\n  Receives a ChangeEvent<T> as a parameter and expects a boolean return value.\n   */\n  shouldUpdate?: (event: ChangeEvent<ValueType<T>>) => boolean;\n  /*\n  Create a new instance of the bloc, this bloc is not added to the global or any local state.\n   */\n  create?: () => T;\n}\n\nconst defaultBlocHookOptions: BlocHookOptions<any> = {\n  subscribe: true\n};\n\nclass BlocRuntimeError {\n  error: Error;\n\n  constructor(message?: string) {\n    this.error = new Error(message);\n  }\n}\n\nclass NoValue {\n}\n\nexport class BlocReact extends BlocConsumer {\n  private providerCount = 0;\n  private readonly _blocsGlobal: BlocBase<any>[];\n  private _contextLocalProviderKey = React.createContext<string>('none');\n\n  constructor(blocs: BlocBase<any>[], options?: ConsumerOptions) {\n    super(blocs, options);\n    this._blocsGlobal = blocs;\n    this.BlocProvider = this.BlocProvider.bind(this);\n    this.BlocBuilder = this.BlocBuilder.bind(this);\n  }\n\n  useBloc = <T extends BlocBase<any>>(\n    blocClass: BlocClass<T>,\n    options: BlocHookOptions<T> = {}\n  ): BlocHookData<T> => {\n    const mergedOptions: BlocHookOptions<T> = {\n      ...defaultBlocHookOptions,\n      ...options\n    };\n    let blocInstance: BlocBase<T> | undefined = useMemo(() => options.create ? options.create() : undefined, []);\n\n    if (!blocInstance) {\n      const localProviderKey = useContext(this._contextLocalProviderKey);\n      const localBlocInstance = useMemo(() => this.getLocalBlocForProvider(localProviderKey, blocClass), []);\n      blocInstance = useMemo(() => localBlocInstance || this.getGlobalBlocInstance(this._blocsGlobal, blocClass), []);\n    }\n\n    const { subscribe, shouldUpdate = true } = mergedOptions;\n\n    if (!blocInstance) {\n      const name = blocClass.prototype.constructor.name;\n      const error = new BlocRuntimeError(`\"${name}\" \n      no bloc with this name was found in the global context.\n      \n      # Solutions:\n      \n      1. Wrap your code in a BlocProvider.\n      \n      2. Add \"${name}\" to the \"BlocReact\" constructor:\n        const state = new BlocReact(\n          [\n            ...\n            new ${name}(),\n          ]\n        )\n      `);\n      console.error(error.error);\n      return ([\n        NoValue,\n        {},\n        {\n          error,\n          complete: true\n        }\n      ] as unknown) as BlocHookData<T>;\n    }\n\n    const [data, setData] = useState<ValueType<T>>(blocInstance.state as ValueType<T>);\n\n    const updateData = useCallback((nextState: ValueType<T>) => {\n      if (shouldUpdate === true || shouldUpdate({ nextState, currentState: data })) {\n        setData(nextState);\n      }\n    }, []);\n\n    useEffect(() => {\n      if (subscribe) {\n        const subscription = blocInstance?.subscribe({\n          next: updateData\n        });\n        return () => {\n          subscription?.unsubscribe();\n        };\n      }\n    }, []);\n\n    return [\n      data,\n      blocInstance as T\n    ];\n  };\n\n  // Components\n  BlocBuilder<T extends BlocBase<any>>(props: {\n    blocClass: BlocClass<T>;\n    builder: (data: BlocHookData<T>) => ReactElement;\n    shouldUpdate?: (event: ChangeEvent<ValueType<T>>) => boolean;\n  }): ReactElement | null {\n    const hook = this.useBloc(props.blocClass, {\n      shouldUpdate: props.shouldUpdate\n    });\n    return props.builder(hook);\n  };\n\n  BlocProvider<T extends BlocBase<any>>(props: {\n    children?: ReactElement | ReactElement[] | false;\n    bloc: T | ((id: string) => T);\n  }): ReactElement {\n    const id = useMemo(() => createId(), []);\n    const localProviderKey = useContext(this._contextLocalProviderKey);\n    const bloc = useMemo<T>(() => {\n      const newBloc = typeof props.bloc === \"function\" ? props.bloc(id) : props.bloc;\n      if (newBloc) {\n        this.addLocalBloc({\n          bloc: newBloc,\n          id,\n          parent: localProviderKey\n        });\n      } else {\n        console.error(`BLoC is undefined`);\n      }\n      return newBloc;\n    }, []);\n\n    const context = useMemo<React.Context<BlocBase<any>>>(() => {\n      return React.createContext<BlocBase<any>>(bloc);\n    }, [bloc]);\n\n    useEffect(() => {\n      return () => {\n        this.removeLocalBloc(id, bloc);\n      };\n    }, []);\n\n    return (\n      <this._contextLocalProviderKey.Provider value={id}>\n        <context.Provider value={bloc}>{props.children}</context.Provider>\n      </this._contextLocalProviderKey.Provider>\n    );\n  };\n\n  withBlocProvider = <P extends object>(bloc: BlocBase<any> | (() => BlocBase<any>)) => (Component: React.ComponentType<P>): React.ComponentType<P> => {\n    const {BlocProvider} = this;\n    return class WithBlocProvider extends React.Component<P> {\n      render(): React.ComponentType<P> {\n        return (\n          <BlocProvider bloc={bloc}>\n            <Component {...(this.props as P)} />\n          </BlocProvider>\n        ) as unknown as React.ComponentType<P>;\n      }\n    };\n  }  \n}\n\n"],"names":["React","useMemo","useContext","useState","useCallback","useEffect"],"mappings":"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"}